import pytest
from plans_endpoint import get_swagger


@pytest.mark.smoke
@pytest.mark.functionality
@pytest.mark.v1alpha1_tests
def test_swagger_response_validation(env, api, auth, level):
    """
    Test to verify the swagger call returns a 200 response and the JSON has not changed

    return: None
    """
    golden_v1alpha1_swagger = {"swagger": "2.0", "info": {"version": "1.0", "title": "THOR-FLEET-LOGISTICS-API-V1ALPHA1"}, "host": "logistics.dev.agco-fuse-services.com", "basePath": "/v1alpha1", "schemes": ["https"], "paths": {"/plans": {"get": {"summary": "List of plans", "description": "Returns a list of plans", "parameters": [{"in": "header", "name": "Authorization", "type": "string", "format": "Bearer", "required": True}], "responses": {"200": {"description": "OK", "schema": {"type": "array", "items": {"type": "object", "properties": {"plan_id": {"type": "string", "example": "f9c16062-e866-4fb0-a720-78234d9d8d19"}, "field_id": {"type": "string", "example": "67890"}, "created_date": {"type": "string", "example": "2020-04-10T20:24:32.938Z"}, "status": {"type": "object", "properties": {"has_error": {"type": "boolean", "example": False}, "is_complete": {"type": "boolean", "example": False}, "step_name": {"type": "string", "example": "Started"}, "updated_date": {"type": "string", "example": "2020-04-10T20:24:32.938Z"}}}, "updated_date": {"type": "string", "example": "2020-04-10T20:24:32.938Z"}}}}}, "403": {"description": "Forbidden", "schema": {"type": "object", "properties": {"message": {"type": "string", "example": "User is not authorized to access this resource with an explicit deny."}}}}, "500": {"description": "Internal Server Error", "schema": {"type": "object", "properties": {"message": {"type": "string", "example": "An error occurred while retrieving the plans."}}}}, "504": {"description": "Timeout Error", "schema": {"type": "object", "properties": {"plan_id": {"type": "string", "example": "f9c16062-e866-4fb0-a720-78234d9d8d19"}, "field_id": {"type": "string", "example": "67890"}, "created_date": {"type": "string", "example": "2020-04-10T20:24:32.938Z"}, "updated_date": {"type": "string", "example": "2020-04-10T20:24:32.938Z"}, "status": {"type": "object", "properties": {"has_error": {"type": "boolean", "example": True}, "is_complete": {"type": "boolean", "example": True}, "message": {"type": "string", "example": "An error has occurred in the workflow while generating a route for the requested field. The workflow has been updated accordingly and the process terminated"}, "step_name": {"type": "string", "example": "Saved partition to S3"}, "updated_date": {"type": "string", "example": "2020-04-10T20:24:32.938Z"}}}}}}}, "security": [{"LambdaTokenAuthorizer": []}], "x-amazon-apigateway-integration": {"uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:878796470432:function:THOR-FLEET-LOGISTICS-API-FleetLogisticsGetAllPlan-NBXDLC0PMV6D/invocations", "passthroughBehavior": "when_no_match", "httpMethod": "POST", "type": "aws_proxy"}}, "post": {"summary": "Create new plan", "description": "Returns a plan_id and created date", "parameters": [{"in": "header", "name": "Authorization", "type": "string", "format": "Bearer", "required": True}, {"in": "body", "name": "Body", "schema": {"type": "object", "required": ["field_id"], "properties": {"field_id": {"type": "string", "example": "12345"}, "is_ctf": {"type": "boolean", "example": False}, "headland_width_optimized": {"type": "boolean", "example": False}, "headland_width": {"type": "integer", "example": 10}, "row_direction": {"type": "array", "items": {"type": "object", "properties": {"lat": {"type": "number", "example": 123}, "lng": {"type": "number", "example": 456}}}}, "constraints": {"type": "array", "items": {"type": "object", "properties": {"width": {"type": "number", "example": 10}, "priority": {"type": "number", "example": 1}, "turning_radius": {"type": "number", "example": 10}, "ramp_up_distance": {"type": "number", "example": 10}, "ramp_down_distance": {"type": "number", "example": 10}}}}, "field": {"type": "object", "properties": {"boundary": {"type": "object", "properties": {"boundary": {"type": "array", "items": {"type": "object", "properties": {"lat": {"type": "integer"}, "lng": {"type": "string"}}}, "example": [{"lat": 123, "lng": 456}, {"lat": 234, "lng": 567}, {"lat": 345, "lng": 678}, {"lat": 456, "lng": 789}]}}}, "gates": {"type": "array", "items": {"type": "object", "properties": {"point": {"type": "object", "properties": {"lat": {"type": "number", "example": 123}, "lng": {"type": "number", "example": 456}}}}}}, "soil_type": {"type": "string", "example": "Unknown"}}}}}}], "responses": {"200": {"description": "OK", "schema": {"type": "object", "properties": {"plan_id": {"type": "string", "example": "f9c16062-e866-4fb0-a720-78234d9d8d19"}, "created_date": {"type": "string", "example": "2020-04-10T20:24:32.938Z"}}}}, "400": {"description": "Bad Request", "schema": {"type": "object", "properties": {"message": {"type": "string", "example": "Unable to create plan with invalid input: Expected row_direction parameter lng is required, but none was provided."}}}}, "403": {"description": "Forbidden", "schema": {"type": "object", "properties": {"message": {"type": "string", "example": "User is not authorized to access this resource with an explicit deny."}}}}, "500": {"description": "Internal Server Error", "schema": {"type": "object", "properties": {"message": {"type": "string", "example": "Failed to create item."}}}}}, "security": [{"LambdaTokenAuthorizer": []}], "x-amazon-apigateway-integration": {"uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:878796470432:function:THOR-FLEET-LOGISTICS-API-FleetLogisticsCreatePlan-125M0H87PDNOJ/invocations", "passthroughBehavior": "when_no_match", "httpMethod": "POST", "type": "aws_proxy"}}}, "/plans/{plan_id}": {"get": {"summary": "Retrieve a plan by plan_id", "description": "Returns a plan", "parameters": [{"in": "header", "name": "Authorization", "type": "string", "format": "Bearer", "required": True}, {"in": "path", "name": "plan_id", "type": "string", "required": True, "description": "UUID of the plan"}], "responses": {"200": {"description": "OK", "schema": {"type": "object", "properties": {"kpis": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "result": {"type": "object", "properties": {"value": {"type": "string"}, "unit": {"type": "string"}}}}}, "example": [{"name": "wayline_count", "result": [{"value": "1"}]}, {"name": "headland_area", "result": [{"value": "39538.3054331367", "unit": "SquareMeters"}]}, {"name": "primary_area", "result": [{"value": "187881.14197863924", "unit": "SquareMeters"}]}]}, "plan_id": {"type": "string", "example": "f9c16062-e866-4fb0-a720-78234d9d8d19"}, "field_id": {"type": "string", "example": "67890"}, "created_date": {"type": "string", "example": "2020-04-10T20:24:32.938Z"}, "status": {"type": "object", "properties": {"has_error": {"type": "boolean", "example": False}, "is_complete": {"type": "boolean", "example": False}, "step_name": {"type": "string", "example": "Started"}, "updated_date": {"type": "string", "example": "2020-04-10T20:24:32.938Z"}}}, "updated_date": {"type": "string", "example": "2020-04-10T20:24:32.938Z"}, "s3_presigned_url": {"type": "string", "example": "https://thor-fleet-logistics-partitions-dev.s3.amazonaws.com/persisted-partitions/288b241d-af50-4330-953e-84ea6617fd39-partition.json?AWSAccessKeyId=ASIA4ZHCZ7CQDSFGHEGB&Signature=qwjChWGXYnb4UCgP91VoTV2KHgY%3D&x-amz-security-token=IQoJb3JpZ2luX2VjEDIaCXVzLWVhc3QtMSJGMEQCIChohllkih%2BI%2FN2d9cAag6xIO06m7%2BDcXrnCRG73GO5EAiAjUgy4S0H6TZvK7Zae3HsQDnfa494tSelqDJOKy4X6wSr%2BAQgbEAEaDDg3ODc5NjQ3MDQzMiIMyDSBhtXn5pIiSbH9KtsBrb5w%2BLqWYQxwIHPU%2BmjAw0gc1N3Ir5n%2Fpn1SUYJB9ufZStBYvH6qnsUz7aHICkZGv74L%2BTEYu%2B6pGk5zI5qaPJKa9hg15Ij30pGxFnYUAPXnIspdFKfRT9JyK%2BhA10HoxEU8syNo3Z4i3mJhkxE4Cqa4c5I4y1hMBeyBOCGPA2V%2Bvr2E%2FkSVGS616SJJbORRtFr605el%2BhovpNq84QBVKJxG%2FLkJd0GlufRRworuPndCJg73CTSDBgSHNtYyrtyx9hK6e854igSI7g5Ua1wu6RKlRsrzzl9ye0k6MKql8PkFOuEBhHKoQz6dA6MsN9%2FxNB32tx2HOJwiU9i%2FnPdIgXpj0lwTc3RW418bpGA7zOkYvuHb9RsbI%2FkaCf5cIJLWOJYF7z1KBqXggJj7Iq89%2BtclhkrvD%2Ba3qvWMlJZ1YdPFfwXdY2EEvtiQAB0imZrLK68xdBfSH%2FeQaEAN1x7S9OQ6ZrNuxqQDBOdlbJkDCw1RctKhMXb95e2%2B9tj0BXE4s1rDjeYsJosckU6penCcpWXh4G9hqF6241145g7M3101%2Bwm4mSJ9KdCSIWgyXiUGYLXzxO3uek9MnnyCl1zNXAWmTdnu&Expires=1597773059"}}}}, "400": {"description": "Bad Request"}, "403": {"description": "Forbidden", "schema": {"type": "object", "properties": {"message": {"type": "string", "example": "User is not authorized to access this resource with an explicit deny."}}}}, "404": {"description": "Not Found", "schema": {"type": "object", "properties": {"message": {"type": "string", "example": "Could not find a plan with plan id f9c16062-e866-4fb0-a720-78234d9d8d19."}}}}, "500": {"description": "Internal Server Error", "schema": {"type": "object", "properties": {"message": {"type": "string", "example": "An error occurred while retrieving the plan with plan id f9c16062-e866-4fb0-a720-78234d9d8d195."}}}}, "504": {"description": "Timeout Error", "schema": {"type": "object", "properties": {"plan_id": {"type": "string", "example": "f9c16062-e866-4fb0-a720-78234d9d8d19"}, "field_id": {"type": "string", "example": "67890"}, "created_date": {"type": "string", "example": "2020-04-10T20:24:32.938Z"}, "updated_date": {"type": "string", "example": "2020-04-10T20:24:32.938Z"}, "status": {"type": "object", "properties": {"has_error": {"type": "boolean", "example": True}, "is_complete": {"type": "boolean", "example": True}, "message": {"type": "string", "example": "An error has occurred in the workflow while generating a route for the requested field. The workflow has been updated accordingly and the process terminated"}, "step_name": {"type": "string", "example": "Saved partition to S3"}, "updated_date": {"type": "string", "example": "2020-04-10T20:24:32.938Z"}}}}}}}, "security": [{"LambdaTokenAuthorizer": []}], "x-amazon-apigateway-integration": {"uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:878796470432:function:THOR-FLEET-LOGISTICS-API-FleetLogisticsPlanByPlan-1XYB23PHPE3Q3/invocations", "passthroughBehavior": "when_no_match", "httpMethod": "POST", "type": "aws_proxy"}}}, "/plans/{plan_id}/status": {"get": {"summary": "Retrieve the status of a plan by plan_id", "description": "Returns status", "parameters": [{"in": "header", "name": "Authorization", "type": "string", "format": "Bearer", "required": True}, {"in": "path", "name": "plan_id", "type": "string", "required": True, "description": "UUID of the plan to get the status of."}], "responses": {"200": {"description": "OK", "schema": {"type": "object", "properties": {"has_error": {"type": "boolean", "example": True}, "is_complete": {"type": "boolean", "example": True}, "message": {"type": "string", "example": "An error has occurred in the workflow while generating a route for the requested field. The workflow has been updated accordingly and the process terminated"}, "step_name": {"type": "string", "example": "Saved partition to S3"}, "updated_date": {"type": "string", "example": "2020-04-10T20:24:32.938Z"}}}}, "400": {"description": "Bad Request"}, "403": {"description": "Forbidden", "schema": {"type": "object", "properties": {"message": {"type": "string", "example": "User is not authorized to access this resource with an explicit deny."}}}}, "404": {"description": "Not Found", "schema": {"type": "object", "properties": {"message": {"type": "string", "example": "Could not find a status with the plan id f9c16062-e866-4fb0-a720-78234d9d8d19."}}}}, "500": {"description": "Internal Server Error", "schema": {"type": "object", "properties": {"message": {"type": "string", "example": "An error occurred while retrieving the status with plan id f9c16062-e866-4fb0-a720-78234d9d8d19."}}}}, "504": {"description": "Timeout Error", "schema": {"type": "object", "properties": {"has_error": {"type": "boolean", "example": False}, "is_complete": {"type": "boolean", "example": False}, "message": {"type": "string", "example": "An error has occurred in the workflow while generating a route for the requested field. The workflow has been updated accordingly and the process terminated"}, "step_name": {"type": "string", "example": "Started"}, "updated_date": {"type": "string", "example": "2020-04-10T20:24:32.938Z"}}}}}, "security": [{"LambdaTokenAuthorizer": []}], "x-amazon-apigateway-integration": {"uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:878796470432:function:THOR-FLEET-LOGISTICS-API-FleetLogisticsGetStatusF-1A27AM4FY3XHS/invocations", "passthroughBehavior": "when_no_match", "httpMethod": "POST", "type": "aws_proxy"}}}}, "securityDefinitions": {"LambdaTokenAuthorizer": {"type": "apiKey", "name": "Authorization", "in": "header", "x-amazon-apigateway-authtype": "custom", "x-amazon-apigateway-authorizer": {"authorizerUri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:878796470432:function:THOR-FLEET-LOGISTICS-API-V1ALPHA1-AuthFunction-IS6LV9F2G3UR/invocations", "authorizerResultTtlInSeconds": 300, "type": "token"}}}, "definitions": {"thor_fleet_logistics_plans": {"type": "object", "properties": {"plan_id": {"type": "string", "example": "07e2362c-033b-4b4c-8520-900bfdc9a5e7", "description": "The plan id of a plan."}, "field_id": {"type": "string", "example": "657", "description": "The field id of a plan."}, "created_date": {"type": "string", "example": "2020-07-23 19:50:43.289", "description": "The created date of a plan."}, "status": {"type": "object", "properties": {"has_error": {"type": "boolean", "example": False, "description": "Check if the status has an error."}, "is_complete": {"type": "boolean", "example": False, "description": "Check if the status is complete."}, "step_name": {"type": "string", "example": "Generating a partition", "description": "The current step name."}, "updated_date": {"type": "string", "example": "2020-07-23 19:50:43.289", "description": "The updated date of a status."}}, "title": "Status", "description": "The status of a plan."}, "updated_date": {"type": "string", "example": "2020-07-23 19:50:43.289", "description": "The updated date of a plan."}, "kpis": {"description": "The wayline_count, primary_area, and headland_area calculated in the PartitionKpiProducer step.", "type": "array", "items": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the kpi calculated."}, "result": {"type": "object", "properties": {"value": {"type": "string", "description": "The value of the kpi calculated."}, "unit": {"type": "string", "description": "The unit of the kpi calculated."}}}}}, "example": [{"name": "wayline_count", "result": [{"value": "1"}]}, {"name": "headland_area", "result": [{"value": "39538.3054331367", "unit": "SquareMeters"}]}, {"name": "primary_area", "result": [{"value": "187881.14197863924", "unit": "SquareMeters"}]}]}}, "title": "Plans", "description": "The details for a plan.", "required": ["plan_id", "field_id", "created_date", "status", "updated_date"]}}}
    golden_v1beta1_swagger = {"swagger": "2.0", "info": {"version": "1.0", "title": "THOR-FLEET-LOGISTICS-API-V1BETA1"}, "host": "logistics.stg.agco-fuse-services.com", "basePath": "/v1beta1", "schemes": ["https"], "paths": {"/plans": {"post": {"summary": "Create new plan", "description": "Returns a plan_id and created date", "parameters": [{"in": "header", "name": "Authorization", "type": "string", "format": "Bearer", "required": True}, {"in": "body", "name": "Body", "schema": {"type": "object", "required": ["field_id"], "properties": {"field_id": {"type": "string", "example": "12345"}, "is_ctf": {"type": "boolean", "example": False}, "headland_width_optimized": {"type": "boolean", "example": False}, "headland_width": {"type": "integer", "example": 10}, "row_direction": {"type": "array", "items": {"type": "object", "properties": {"lat": {"type": "number", "example": 123}, "lng": {"type": "number", "example": 456}}}}, "constraints": {"type": "array", "items": {"type": "object", "properties": {"width": {"type": "number", "example": 10}, "priority": {"type": "number", "example": 1}, "turning_radius": {"type": "number", "example": 10}, "ramp_up_distance": {"type": "number", "example": 10}, "ramp_down_distance": {"type": "number", "example": 10}}}}, "field": {"type": "object", "properties": {"boundary": {"type": "object", "properties": {"boundary": {"type": "array", "items": {"type": "object", "properties": {"lat": {"type": "integer"}, "lng": {"type": "string"}}}, "example": [{"lat": 123, "lng": 456}, {"lat": 234, "lng": 567}, {"lat": 345, "lng": 678}, {"lat": 456, "lng": 789}]}}}, "gates": {"type": "array", "items": {"type": "object", "properties": {"point": {"type": "object", "properties": {"lat": {"type": "number", "example": 123}, "lng": {"type": "number", "example": 456}}}}}}, "soil_type": {"type": "string", "example": "Unknown"}}}}}}], "responses": {"200": {"description": "OK", "schema": {"type": "object", "properties": {"plan_id": {"type": "string", "example": "f9c16062-e866-4fb0-a720-78234d9d8d19"}, "created_date": {"type": "string", "example": "2020-04-10T20:24:32.938Z"}}}}, "400": {"description": "Bad Request", "schema": {"type": "object", "properties": {"message": {"type": "string", "example": "Unable to create plan with invalid input: Expected row_direction parameter lng is required, but none was provided."}}}}, "403": {"description": "Forbidden", "schema": {"type": "object", "properties": {"message": {"type": "string", "example": "User is not authorized to access this resource with an explicit deny."}}}}, "500": {"description": "Internal Server Error", "schema": {"type": "object", "properties": {"message": {"type": "string", "example": "Failed to create item."}}}}}, "security": [{"LambdaTokenAuthorizer": []}], "x-amazon-apigateway-integration": {"uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:878796470432:function:THOR-FLEET-LOGISTICS-API-FleetLogisticsCreatePlan-125M0H87PDNOJ/invocations", "passthroughBehavior": "when_no_match", "httpMethod": "POST", "type": "aws_proxy"}}}, "/plans/{plan_id}": {"get": {"summary": "Retrieve a plan by plan_id", "description": "Returns a plan", "parameters": [{"in": "header", "name": "Authorization", "type": "string", "format": "Bearer", "required": True}, {"in": "path", "name": "plan_id", "type": "string", "required": True, "description": "UUID of the plan"}], "responses": {"200": {"description": "OK", "schema": {"type": "object", "properties": {"kpis": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "result": {"type": "object", "properties": {"value": {"type": "string"}, "unit": {"type": "string"}}}}}, "example": [{"name": "wayline_count", "result": [{"value": "1"}]}, {"name": "headland_area", "result": [{"value": "39538.3054331367", "unit": "SquareMeters"}]}, {"name": "primary_area", "result": [{"value": "187881.14197863924", "unit": "SquareMeters"}]}]}, "plan_id": {"type": "string", "example": "f9c16062-e866-4fb0-a720-78234d9d8d19"}, "field_id": {"type": "string", "example": "67890"}, "created_date": {"type": "string", "example": "2020-04-10T20:24:32.938Z"}, "status": {"type": "object", "properties": {"has_error": {"type": "boolean", "example": False}, "is_complete": {"type": "boolean", "example": False}, "step_name": {"type": "string", "example": "Started"}, "updated_date": {"type": "string", "example": "2020-04-10T20:24:32.938Z"}}}, "updated_date": {"type": "string", "example": "2020-04-10T20:24:32.938Z"}, "s3_presigned_url": {"type": "string", "example": "https://thor-fleet-logistics-partitions-dev.s3.amazonaws.com/persisted-partitions/288b241d-af50-4330-953e-84ea6617fd39-partition.json?AWSAccessKeyId=ASIA4ZHCZ7CQDSFGHEGB&Signature=qwjChWGXYnb4UCgP91VoTV2KHgY%3D&x-amz-security-token=IQoJb3JpZ2luX2VjEDIaCXVzLWVhc3QtMSJGMEQCIChohllkih%2BI%2FN2d9cAag6xIO06m7%2BDcXrnCRG73GO5EAiAjUgy4S0H6TZvK7Zae3HsQDnfa494tSelqDJOKy4X6wSr%2BAQgbEAEaDDg3ODc5NjQ3MDQzMiIMyDSBhtXn5pIiSbH9KtsBrb5w%2BLqWYQxwIHPU%2BmjAw0gc1N3Ir5n%2Fpn1SUYJB9ufZStBYvH6qnsUz7aHICkZGv74L%2BTEYu%2B6pGk5zI5qaPJKa9hg15Ij30pGxFnYUAPXnIspdFKfRT9JyK%2BhA10HoxEU8syNo3Z4i3mJhkxE4Cqa4c5I4y1hMBeyBOCGPA2V%2Bvr2E%2FkSVGS616SJJbORRtFr605el%2BhovpNq84QBVKJxG%2FLkJd0GlufRRworuPndCJg73CTSDBgSHNtYyrtyx9hK6e854igSI7g5Ua1wu6RKlRsrzzl9ye0k6MKql8PkFOuEBhHKoQz6dA6MsN9%2FxNB32tx2HOJwiU9i%2FnPdIgXpj0lwTc3RW418bpGA7zOkYvuHb9RsbI%2FkaCf5cIJLWOJYF7z1KBqXggJj7Iq89%2BtclhkrvD%2Ba3qvWMlJZ1YdPFfwXdY2EEvtiQAB0imZrLK68xdBfSH%2FeQaEAN1x7S9OQ6ZrNuxqQDBOdlbJkDCw1RctKhMXb95e2%2B9tj0BXE4s1rDjeYsJosckU6penCcpWXh4G9hqF6241145g7M3101%2Bwm4mSJ9KdCSIWgyXiUGYLXzxO3uek9MnnyCl1zNXAWmTdnu&Expires=1597773059"}}}}, "400": {"description": "Bad Request"}, "403": {"description": "Forbidden", "schema": {"type": "object", "properties": {"message": {"type": "string", "example": "User is not authorized to access this resource with an explicit deny."}}}}, "404": {"description": "Not Found", "schema": {"type": "object", "properties": {"message": {"type": "string", "example": "Could not find a plan with plan id f9c16062-e866-4fb0-a720-78234d9d8d19."}}}}, "500": {"description": "Internal Server Error", "schema": {"type": "object", "properties": {"message": {"type": "string", "example": "An error occurred while retrieving the plan with plan id f9c16062-e866-4fb0-a720-78234d9d8d19."}}}}, "504": {"description": "Timeout Error", "schema": {"type": "object", "properties": {"plan_id": {"type": "string", "example": "f9c16062-e866-4fb0-a720-78234d9d8d19"}, "field_id": {"type": "string", "example": "67890"}, "created_date": {"type": "string", "example": "2020-04-10T20:24:32.938Z"}, "updated_date": {"type": "string", "example": "2020-04-10T20:24:32.938Z"}, "status": {"type": "object", "properties": {"has_error": {"type": "boolean", "example": True}, "is_complete": {"type": "boolean", "example": True}, "message": {"type": "string", "example": "An error has occurred in the workflow while generating a route for the requested field. The workflow has been updated accordingly and the process terminated"}, "step_name": {"type": "string", "example": "Saved partition to S3"}, "updated_date": {"type": "string", "example": "2020-04-10T20:24:32.938Z"}}}}}}}, "security": [{"LambdaTokenAuthorizer": []}], "x-amazon-apigateway-integration": {"uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:878796470432:function:THOR-FLEET-LOGISTICS-API-FleetLogisticsPlanByPlan-1XYB23PHPE3Q3/invocations", "passthroughBehavior": "when_no_match", "httpMethod": "POST", "type": "aws_proxy"}}}, "/plans/{plan_id}/status": {"get": {"summary": "Retrieve the status of a plan by plan_id", "description": "Returns status", "parameters": [{"in": "header", "name": "Authorization", "type": "string", "format": "Bearer", "required": True}, {"in": "path", "name": "plan_id", "type": "string", "required": True, "description": "UUID of the plan to get the status of."}], "responses": {"200": {"description": "OK", "schema": {"type": "object", "properties": {"has_error": {"type": "boolean", "example": True}, "is_complete": {"type": "boolean", "example": True}, "message": {"type": "string", "example": "An error has occurred in the workflow while generating a route for the requested field. The workflow has been updated accordingly and the process terminated"}, "step_name": {"type": "string", "example": "Saved partition to S3"}, "updated_date": {"type": "string", "example": "2020-04-10T20:24:32.938Z"}}}}, "400": {"description": "Bad Request"}, "403": {"description": "Forbidden", "schema": {"type": "object", "properties": {"message": {"type": "string", "example": "User is not authorized to access this resource with an explicit deny."}}}}, "404": {"description": "Not Found", "schema": {"type": "object", "properties": {"message": {"type": "string", "example": "Could not find a status with the plan id f9c16062-e866-4fb0-a720-78234d9d8d19."}}}}, "500": {"description": "Internal Server Error", "schema": {"type": "object", "properties": {"message": {"type": "string", "example": "An error occurred while retrieving the statud with plan id f9c16062-e866-4fb0-a720-78234d9d8d19."}}}}, "504": {"description": "Timeout Error", "schema": {"type": "object", "properties": {"has_error": {"type": "boolean", "example": False}, "is_complete": {"type": "boolean", "example": False}, "message": {"type": "string", "example": "An error has occurred in the workflow while generating a route for the requested field. The workflow has been updated accordingly and the process terminated"}, "step_name": {"type": "string", "example": "Started"}, "updated_date": {"type": "string", "example": "2020-04-10T20:24:32.938Z"}}}}}, "security": [{"LambdaTokenAuthorizer": []}], "x-amazon-apigateway-integration": {"uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:878796470432:function:THOR-FLEET-LOGISTICS-API-FleetLogisticsGetStatusF-1A27AM4FY3XHS/invocations", "passthroughBehavior": "when_no_match", "httpMethod": "POST", "type": "aws_proxy"}}}}, "securityDefinitions": {"LambdaTokenAuthorizer": {"type": "apiKey", "name": "Authorization", "in": "header", "x-amazon-apigateway-authtype": "custom", "x-amazon-apigateway-authorizer": {"authorizerUri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:878796470432:function:THOR-FLEET-LOGISTICS-API-V1BETA1-AuthFunction-IS6LV9F2G3UR/invocations", "authorizerResultTtlInSeconds": 300, "type": "token"}}}, "definitions": {"thor_fleet_logistics_plans": {"type": "object", "properties": {"plan_id": {"type": "string", "example": "07e2362c-033b-4b4c-8520-900bfdc9a5e7", "description": "The plan id of a plan."}, "field_id": {"type": "string", "example": "657", "description": "The field id of a plan."}, "created_date": {"type": "string", "example": "2020-07-23 19:50:43.289", "description": "The created date of a plan."}, "status": {"type": "object", "properties": {"has_error": {"type": "boolean", "example": False, "description": "Check if the status has an error."}, "is_complete": {"type": "boolean", "example": False, "description": "Check if the status is complete."}, "step_name": {"type": "string", "example": "Generating a partition", "description": "The current step name."}, "updated_date": {"type": "string", "example": "2020-07-23 19:50:43.289", "description": "The updated date of a status."}}, "title": "Status", "description": "The status of a plan."}, "updated_date": {"type": "string", "example": "2020-07-23 19:50:43.289", "description": "The updated date of a plan."}, "kpis": {"description": "The wayline_count, primary_area, and headland_area calculated in the PartitionKpiProducer step.", "type": "array", "items": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the kpi calculated."}, "result": {"type": "object", "properties": {"value": {"type": "string", "description": "The value of the kpi calculated."}, "unit": {"type": "string", "description": "The unit of the kpi calculated."}}}}}, "example": [{"name": "wayline_count", "result": [{"value": "1"}]}, {"name": "headland_area", "result": [{"value": "39538.3054331367", "unit": "SquareMeters"}]}, {"name": "primary_area", "result": [{"value": "187881.14197863924", "unit": "SquareMeters"}]}]}}, "title": "Plans", "description": "The details for a plan.", "required": ["plan_id", "field_id", "created_date", "status", "updated_date"]}}}

    if env == 'stg':
        golden_v1alpha1_swagger['host'] = golden_v1alpha1_swagger['host'].replace('dev', 'stg', 1)
        golden_v1beta1_swagger['host'] = golden_v1beta1_swagger['host'].replace('dev', 'stg', 1)
    elif env == 'prod':
        golden_v1alpha1_swagger['host'] = golden_v1alpha1_swagger['host'].replace('dev.', '', 1)
        golden_v1beta1_swagger['host'] = golden_v1beta1_swagger['host'].replace('dev.', '', 1)

    response = get_swagger(env, api, auth, level)
    assert response.status_code == 200
    json_response = response.json()

    if api == "v1alpha1":
        assert json_response == golden_v1alpha1_swagger
    elif api == "v1beta1":
        assert json_response == golden_v1beta1_swagger
